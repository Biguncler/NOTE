1,类是对象的抽象，对象是类的实例
2，类的定义
    （1）类的结构
    [修饰符] 类名{
        类的成员
    }
    （2）修饰符包含: public ／default／abstract ／final（不可继承类） （private／protected／static不能修饰类只用于修饰类的内部成员）
    （3）类名必须以大写开头
    （4）类的成员：成员变量 ／ 方法 ／ 构造方法 ／代码块 ／ 子类／
3，成员变量
    （1）定义 [修饰符] 类型 变量名 [= 初始值]
    （2）变量名以首字母小写的驼峰命名法
4，方法
    （1）定义 [修饰符] 返回值 方法名 (参数){ 执行语句}
    （2）方法必须通过类对象和类的对象来调用

    （3）方法名命名规则如成员变量

    （4）参数的传递是创建新对象，并传值给该对象
    （5）可变参数必须放在最后，可变参数可以传入多个参数，也可以直接传入一个数组。

    （6）方法的重载：同名不同参 ，方法的重写：重新实现方法体的内容
    （7）子类方法中调用父类方法super.(xxx...),不要求是第一行
    （8）修饰符final：该方法不能被被子类重写，static：该方法属于类，
5，构造方法
    （1）定义 [修饰符] 构造方法名 (参数) {执行语句}
    （2）构造方法名称与类名一致
    （3）构造方法不能定义返回值，如果定义了，虽编译不会有问题，但java会将该方法视为普通方法
    （4）每个类默认会有一个无参的构造方法，直至被定义的其他构造方法覆盖
    （5）一个类有多个构造方法时，在一个构造方法中调用另一个构造方法：this(xxx...)并且必须是在第一行调用
    （6）在子类的构造方法中调用父类的构造方法用super(xxx...),并且必须是在第一行调用
6，代码块
    （1）定义 [修饰符]{执行语句}
    （2）修饰符只能是static，要么就省略修饰符
    （3）代码块先与构造方法执行
    （4）多个代码块之间执行顺序是写代码时定义在前面的先执行
    （5）在创建对象时，会先执行父类的代码块，然后在执行父类的构造器，最后再执行子类的代码块和构造器
7，内部类
    （1）


8，this关键字
    （1）this一般出现在方法里，意为调用该法的对象，this指向调用该方法的对象
    （2）this不能出现在静态方法中，因为this表示的调用该方法的对象，而静态方法是属于类的，在每创建对象时也可以用类名调用该方法
9，封装
    （1）将对象的状态信息隐藏在对象内部，不允许外部直接访问，而是通过对该类对外开放的方法间接给外部访问
10，java的访问控制符
    （1）private  （只允许本类内部访问）
    （2）default  （只允许同一包内访问）
    （3）protected（只允许子类访问，不限于是否在同一包内）
    （4）public   （公开访问）
11，继承
    （1）当创建子类对象时，会先创建父类对象，在创建子类对象
    （2）当父类调用构造方法中调用类被子类重写的方法时，在创建子类时，先执行父类的构造方法，并执行子类重写的方法




